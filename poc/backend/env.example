# =================================================================
# Car Rental Platform - Environment Configuration
# Per-service provider selection (DIP)
# =================================================================

# =================
# APPLICATION CONFIG
# =================
NODE_ENV=development
PORT=3000

# =================
# PROVIDERS (per service)
# =================
AUTH_PROVIDER=mock           # mock | aws
STORAGE_PROVIDER=mock        # mock | s3
NOTIFICATION_PROVIDER=mock   # mock | aws | twilio
KYC_PROVIDER=mock            # mock | sfn
PAYMENT_PROVIDER=mock        # mock | stripe
LAMBDA_PROVIDER=mock         # mock | aws

# =================
# DATABASE CONFIG
# =================
DB_DISABLE=false             # false => PostgreSQL (local & dev); true => in-memory SQLite (testing only)
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=car_rental
DB_SSL=false

# =================
# AWS (used only when a provider is set to an AWS-backed impl)
# =================
AWS_REGION=ap-southeast-1
AWS_PROFILE=default

# AUTH (when AUTH_PROVIDER=aws)
USER_POOL_ID=
USER_POOL_CLIENT_ID=

# STORAGE (when STORAGE_PROVIDER=s3)
S3_BUCKET_NAME=

# KYC (when KYC_PROVIDER=sfn)
KYC_SFN_ARN=

# NOTIFICATIONS (when NOTIFICATION_PROVIDER=aws)
EMAIL_FROM=no-reply@carrentalplatform.com
SMS_SENDER_ID=CarRental

# Twilio (when NOTIFICATION_PROVIDER=twilio)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_FROM_NUMBER=
TWILIO_MESSAGING_SERVICE_SID=

# PAYMENTS (when PAYMENT_PROVIDER=stripe)
STRIPE_SECRET_KEY=
STRIPE_PUBLISHABLE_KEY=

# Lambda Configuration (when using AWS Lambda provider)
GENERATE_PRESIGNED_URL_LAMBDA=GeneratePresignedUrl
KYC_STATE_MACHINE_ARN=arn:aws:states:ap-southeast-1:123456789012:stateMachine:kyc-validation

# =================
# SECURITY & CORS
# =================
JWT_SECRET=your-super-secret-jwt-key-change-in-production
CORS_ORIGIN=*

# =================
# DEBUG
# =================
DEBUG=false
DEBUG_INCLUDE_OTP=true       # If unset, defaults to true unless NODE_ENV=production
